// Code generated by MockGen. DO NOT EDIT.
// Source: blog/domain/blog (interfaces: BlogRepository)

// Package blogmock is a generated GoMock package.
package blogmock

import (
	blog "blog/domain/blog"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBlogRepository is a mock of BlogRepository interface.
type MockBlogRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlogRepositoryMockRecorder
}

// MockBlogRepositoryMockRecorder is the mock recorder for MockBlogRepository.
type MockBlogRepositoryMockRecorder struct {
	mock *MockBlogRepository
}

// NewMockBlogRepository creates a new mock instance.
func NewMockBlogRepository(ctrl *gomock.Controller) *MockBlogRepository {
	mock := &MockBlogRepository{ctrl: ctrl}
	mock.recorder = &MockBlogRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogRepository) EXPECT() *MockBlogRepositoryMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockBlogRepository) Find(arg0 int64) (*blog.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0)
	ret0, _ := ret[0].(*blog.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockBlogRepositoryMockRecorder) Find(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockBlogRepository)(nil).Find), arg0)
}

// Save mocks base method.
func (m *MockBlogRepository) Save(arg0 *blog.Blog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockBlogRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockBlogRepository)(nil).Save), arg0)
}
